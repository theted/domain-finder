name: Run tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        redis-version: [7]

    steps:
      - uses: actions/checkout@v3
      - uses: oven-sh/setup-bun@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install CI dependencies
        run: npm ci

      - name: Start Redis
        uses: supercharge/redis-github-action@1.7.0
        with:
          redis-version: ${{ matrix.redis-version }}

      - name: Run tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DOMAINR_API_KEY: ${{ secrets.DOMAINR_API_KEY }}
          VITE_EVENTS_URL: ${{ secrets.VITE_EVENTS_URL }}
        run: |
          VITE_API_KEY="${API_KEY}" npm run build
          npm run preview &
          npm run test-ci

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          dockerfile: ./Dockerfile
          tags: theted/domain-finder:latest
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set permissions for private key
        run: |
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > key.pem &&chmod 600 key.pem
      - name: Pull docker image
        env:
          HOSTNAME: ${{ secrets.HOSTNAME }}
          USER_NAME: ${{ secrets.USER_NAME }}
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${USER_NAME}@${HOSTNAME} 'sudo docker pull theted/domain-finder:latest'
      - name: Stop running container
        env:
          HOSTNAME: ${{ secrets.HOSTNAME }}
          USER_NAME: ${{ secrets.USER_NAME }}
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${USER_NAME}@${HOSTNAME} 'sudo docker stop domain-finder || true'
          ssh -o StrictHostKeyChecking=no -i key.pem ${USER_NAME}@${HOSTNAME} 'sudo docker rm domain-finder || true'
      - name: Run new container
        env:
          HOSTNAME: ${{ secrets.HOSTNAME }}
          USER_NAME: ${{ secrets.USER_NAME }}
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${USER_NAME}@${HOSTNAME} 'sudo docker run -d --name domain-finder -p 80:5000 theted/domain-finder:latest'
